# Generated by Django 2.0.1 on 2018-09-19 09:45

from django.db import migrations, transaction
from core.models import *
from core.management.commands.prepareData import Command


class Migrator():
    def migrateCostAudit(self):
        subtypes = ['cost_lte_5000', 'cost_gt_5000']
        for index, t in enumerate(subtypes):
            audit = AuditActivityConfig.objects.get(subtype=t)
            audit.subtype = 'cost'
            audit.priority = index + 1
            _, condition, value = t.split('_')
            audit.conditions = [
                {'prop': 'amount', 'condition': condition, 'value': int(value)}
            ]
            audit.save()

    def migrateLoanAudit(self):
        subtypes = ['loan_lte_5000', 'loan_gt_5000']
        for index, t in enumerate(subtypes):
            audit = AuditActivityConfig.objects.get(subtype=t)
            audit.subtype = 'loan'
            audit.priority = index + 1
            _, condition, value = t.split('_')
            audit.conditions = [
                {'prop': 'amount', 'condition': condition, 'value': int(value)}
            ]
            audit.save()

    def migrateTravelAudit(self):
        subtypes = ['travel_lte_5000', 'travel_gt_5000']
        for index, t in enumerate(subtypes):
            audit = AuditActivityConfig.objects.get(subtype=t)
            audit.subtype = 'travel'
            audit.priority = index + 1
            _, condition, value = t.split('_')
            audit.conditions = [
                {'prop': 'amount', 'condition': condition, 'value': int(value)}
            ]
            audit.save()

    def migrateMoneyAudit(self):

        audit = AuditActivityConfig.objects.get(subtype='money_caigou_or_other_lte_5k')
        audit.conditions = [
            {'prop': 'amount', 'condition': 'lte', 'value': 5000},
            {'prop': 'info.type', 'condition': 'eq', 'value': 'caigou,other'}
        ]
        audit.priority = 1
        audit.subtype = 'money'
        audit.save()

        audit = AuditActivityConfig.objects.get(subtype='money_caigou_or_other')
        audit.conditions = [
            {'prop': 'info.type', 'condition': 'eq', 'value': 'fin,biz'}
        ]
        audit.priority = 2
        audit.subtype = 'money'
        audit.save()

        audit = AuditActivityConfig.objects.get(subtype='money_lte_50k')
        audit.priority = 3
        audit.conditions = [
            {'prop': 'amount', 'condition': 'lte', 'value': 500 * 1000}
        ]
        audit.subtype = 'money'
        audit.save()

        audit = AuditActivityConfig.objects.get(subtype='money_gt_50k')
        audit.priority = 4
        audit.conditions = [
            {'prop': 'amount', 'condition': 'gt', 'value': 500 * 1000}
        ]
        audit.subtype = 'money'
        audit.save()

    def migratePurchaseAudit(self):
        subtypes = ['purchase_lte_5000', 'purchase_gt_5000']
        for index, t in enumerate(subtypes):
            audit = AuditActivityConfig.objects.get(subtype=t)
            audit.subtype = 'purchase'
            audit.priority = index + 1
            _, condition, value = t.split('_')
            audit.conditions = [
                {'prop': 'amount', 'condition': condition, 'value': int(value)}
            ]
            audit.save()

    def migrateOpenAccountAudit(self):
        audit = AuditActivityConfig.objects.get(subtype='open_account')
        audit.priority = 0
        audit.fallback = True
        audit.save()

    def migrateBizContractAudit(self):
        audit = AuditActivityConfig.objects.get(subtype='biz_contract')
        audit.priority = 0
        audit.fallback = True
        audit.save()

    def migrateFnContractAudit(self):
        audit = AuditActivityConfig.objects.get(subtype='fn_contract')
        audit.priority = 0
        audit.fallback = True
        audit.save()

        audit = AuditActivityConfig.objects.get(subtype='fn_contract_zero')
        audit.conditions = [
            {'prop': 'amount', 'condition': 'eq', 'value': 0}
        ]
        audit.priority = 1
        audit.subtype = 'fn_contract'
        audit.fallback = False
        audit.save()

    def migrate(self):
        # migrate v1 audit configs to v3

        with transaction.atomic():
            # fin audits
            self.migrateCostAudit()
            self.migrateLoanAudit()
            self.migrateMoneyAudit()
            self.migratePurchaseAudit()
            self.migrateTravelAudit()
            self.migrateOpenAccountAudit()

            # law audits
            self.migrateBizContractAudit()
            self.migrateFnContractAudit()


def prepareV1DataIfNeed(apps, schema_editor):
    with transaction.atomic():
        config = AuditActivityConfig.objects \
            .filter(subtype='cost_lte_5000') \
            .first()
        if config != None:
            return

        cmd = Command()
        cmd.handle()


def upgradeToV3(apps, schema_editor):
    m = Migrator()
    m.migrate()


class Migration(migrations.Migration):
    dependencies = [
        ('core', '0012_auto_20180923_1458'),
    ]

    operations = [
        migrations.RunPython(prepareV1DataIfNeed),
        migrations.RunPython(upgradeToV3),
    ]
